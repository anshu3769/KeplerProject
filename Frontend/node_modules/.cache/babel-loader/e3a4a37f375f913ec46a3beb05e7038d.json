{"ast":null,"code":"import _classCallCheck from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/usr/src/Kepler-OnBoarding-Project/Frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/usr/src/Kepler-OnBoarding-Project/Frontend/src/components/WordList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    words {\\n      word\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport var WORD_QUERY = gql(_templateObject());\n\nvar WordList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WordList, _React$Component);\n\n  function WordList() {\n    _classCallCheck(this, WordList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WordList).apply(this, arguments));\n  }\n\n  _createClass(WordList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Query, {\n        query: WORD_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n\n        if (!data || loading) {\n          console.log('Loading');\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, \"Fetching\");\n        } else if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Error\");else if (data) {\n          console.log(data);\n        } //This is to call the function on parent which\n        //was passed as prop to this component\n\n\n        _this.props.onLoadComplete(data.words);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return WordList;\n}(React.Component);\n\nexport default WordList;","map":{"version":3,"sources":["/usr/src/Kepler-OnBoarding-Project/Frontend/src/components/WordList.js"],"names":["React","Query","gql","WORD_QUERY","WordList","loading","error","data","console","log","props","onLoadComplete","words","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,UAAU,GAAGD,GAAH,mBAAhB;;IAQDE,Q;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAED,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA4B;AAAA,YAA1BE,OAA0B,QAA1BA,OAA0B;AAAA,YAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,YAAVC,IAAU,QAAVA,IAAU;;AAC3B,YAAI,CAACA,IAAD,IAASF,OAAb,EAAsB;AACpBG,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,SAHD,MAGO,IAAIH,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP,CAAX,KACF,IAAIC,IAAJ,EAAU;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,SAP0B,CAS3B;AACA;;;AACA,QAAA,KAAI,CAACG,KAAL,CAAWC,cAAX,CAA0BJ,IAAI,CAACK,KAA/B;;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAdH,CADF;AAkBD;;;;EApBoBZ,KAAK,CAACa,S;;AAuB7B,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nexport const WORD_QUERY = gql`\n  query {\n    words {\n      word\n    }\n  }\n`;\n\nclass WordList extends React.Component {\n  render() {\n    return (\n      <Query query={WORD_QUERY}>\n        {({loading, error, data}) => {\n          if (!data || loading) {\n            console.log('Loading');\n            return <div>Fetching</div>;\n          } else if (error) return <div>Error</div>;\n          else if (data) {\n            console.log(data);\n          }\n\n          //This is to call the function on parent which\n          //was passed as prop to this component\n          this.props.onLoadComplete(data.words);\n          return <div />;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default WordList;\n"]},"metadata":{},"sourceType":"module"}