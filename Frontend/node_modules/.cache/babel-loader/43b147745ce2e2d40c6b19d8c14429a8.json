{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/PlayerList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query {\\n    players{\\n        firstName\\n        }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Player from './Player';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport var PLAYER_QUERY = gql(_templateObject());\n\nvar PlayerList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayerList, _React$Component);\n\n  function PlayerList() {\n    _classCallCheck(this, PlayerList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayerList).apply(this, arguments));\n  }\n\n  _createClass(PlayerList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"player list render function\"); // const playersToRender = [\n      //   {\n      //     id: '1',\n      //     name: 'Player 1',\n      //   },\n      //   {\n      //     id: '2',\n      //     name: 'Player 2',\n      //   },\n      // ]\n      // return (\n      //   <div>{playersToRender.map(player => <Player key={player.id} player={player} />)}</div>\n      // )\n\n      return React.createElement(Query, {\n        query: PLAYER_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n\n        if (!data || loading) {\n          console.log(\"Loading\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"Fetching\");\n        } else if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Error\");else if (data) {\n          console.log(data);\n        }\n\n        var playerToRender = data.players;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, playerToRender.map(function (player) {\n          return React.createElement(Player, {\n            key: player.id,\n            player: player,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n        }));\n      });\n    }\n  }]);\n\n  return PlayerList;\n}(React.Component);\n\nexport default PlayerList;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/PlayerList.js"],"names":["React","Player","Query","gql","PLAYER_QUERY","PlayerList","console","log","loading","error","data","playerToRender","players","map","player","id","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEC,OAAO,IAAMC,YAAY,GAAID,GAAJ,mBAAlB;;IAQFE,U;;;;;;;;;;;;;6BACK;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADO,CAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACA;AACA;;AAEA,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BI,OAA2B,QAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;;AAC7B,YAAI,CAACA,IAAD,IAASF,OAAb,EACA;AACEF,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,SAJD,MAKK,IAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP,CAAX,KACA,IAAGC,IAAH,EACL;AACEJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD;;AAED,YAAMC,cAAc,GAAGD,IAAI,CAACE,OAA5B;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACID,cAAc,CAACE,GAAf,CAAmB,UAAAC,MAAM;AAAA,iBAAI,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,YAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,SAAzB,CADJ,CADF;AAKD,OAnBH,CADF;AAuBD;;;;EAzCsBd,KAAK,CAACgB,S;;AA4C/B,eAAeX,UAAf","sourcesContent":["import React from 'react'\nimport Player from './Player'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\n export const PLAYER_QUERY =  gql`\n query {\n    players{\n        firstName\n        }\n  }\n`;\n\nclass PlayerList extends React.Component {\n  render() {\n    console.log(\"player list render function\")\n   // const playersToRender = [\n   //   {\n   //     id: '1',\n   //     name: 'Player 1',\n   //   },\n   //   {\n   //     id: '2',\n   //     name: 'Player 2',\n   //   },\n   // ]\n\n    // return (\n    //   <div>{playersToRender.map(player => <Player key={player.id} player={player} />)}</div>\n    // )\n\n    return (\n      <Query query={PLAYER_QUERY}>\n        {({ loading, error, data }) => {\n          if (!data || loading)\n          {\n            console.log(\"Loading\")\n            return <div>Fetching</div>\n          }\n          else if (error) return <div>Error</div>\n          else if(data)\n          {\n            console.log(data)\n          }\n\n          const playerToRender = data.players\n          return (\n            <div>\n               {playerToRender.map(player => <Player key={player.id} player={player} />)}\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default PlayerList\n"]},"metadata":{},"sourceType":"module"}