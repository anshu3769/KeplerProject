{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/WordList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query {\\n    {\\n        word,\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport var WORD_QUERY = gql(_templateObject());\n\nvar WordList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WordList, _React$Component);\n\n  function WordList() {\n    _classCallCheck(this, WordList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WordList).apply(this, arguments));\n  }\n\n  _createClass(WordList, [{\n    key: \"render\",\n    value: function render() {\n      return;\n      React.createElement(Query, {\n        query: WORD_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n\n        if (!data || loading) {\n          console.log(\"Loading\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, \"Fetching\");\n        } else if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Error\");else if (data) {\n          console.log(\"DATA\");\n          console.log(data);\n        }\n\n        var wordsToRender = data.words;\n        console.log(\"wordsToRender \", data.words);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, wordsToRender);\n      });\n    }\n  }]);\n\n  return WordList;\n}(React.Component);\n\nexport default WordList;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/WordList.js"],"names":["React","Query","gql","WORD_QUERY","WordList","loading","error","data","console","log","wordsToRender","words","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEC,OAAO,IAAMC,UAAU,GAAID,GAAJ,mBAAhB;;IAQFE,Q;;;;;;;;;;;;;6BACK;AACP;AACG,0BAAC,KAAD;AAAO,QAAA,KAAK,EAAED,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,gBAA8B;AAAA,YAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;;AAC7B,YAAI,CAACA,IAAD,IAASF,OAAb,EACA;AACEG,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,SAJD,MAKK,IAAIH,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP,CAAX,KACA,IAAGC,IAAH,EACL;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAED,YAAMG,aAAa,GAAGH,IAAI,CAACI,KAA3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,IAAI,CAACI,KAAlC;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,aADL,CADF;AAKD,OArBF,CAAD;AAwBH;;;;EA3BoBV,KAAK,CAACY,S;;AA8B7B,eAAeR,QAAf","sourcesContent":["import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\n export const WORD_QUERY =  gql`\n query {\n    {\n        word,\n    }\n  }\n`;\n\nclass WordList extends React.Component {\n  render() {\n    return\n      (<Query query={WORD_QUERY}>\n        {({ loading, error, data }) => {\n          if (!data || loading)\n          {\n            console.log(\"Loading\")\n            return <div>Fetching</div>\n          }\n          else if (error) return <div>Error</div>\n          else if(data)\n          {\n            console.log(\"DATA\")\n            console.log(data)\n          }\n\n          const wordsToRender = data.words\n          console.log(\"wordsToRender \",data.words)\n          return (\n            <div>\n                {wordsToRender}\n            </div>\n          )\n        }}\n      </Query>\n      )\n  }\n}\n\nexport default WordList\n"]},"metadata":{},"sourceType":"module"}