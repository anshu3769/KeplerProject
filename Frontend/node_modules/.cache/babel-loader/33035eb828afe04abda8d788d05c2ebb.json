{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\n\nvar react_1 = require(\"react\");\n\nvar ts_invariant_1 = require(\"ts-invariant\");\n\nvar ApolloProvider = function (_super) {\n  tslib_1.__extends(ApolloProvider, _super);\n\n  function ApolloProvider(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.operations = new Map();\n    ts_invariant_1.invariant(props.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n\n    if (!props.client.__operations_cache__) {\n      props.client.__operations_cache__ = _this.operations;\n    }\n\n    return _this;\n  }\n\n  ApolloProvider.prototype.getChildContext = function () {\n    return {\n      client: this.props.client,\n      operations: this.props.client.__operations_cache__\n    };\n  };\n\n  ApolloProvider.prototype.render = function () {\n    return this.props.children;\n  };\n\n  ApolloProvider.propTypes = {\n    client: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired\n  };\n  ApolloProvider.childContextTypes = {\n    client: PropTypes.object.isRequired,\n    operations: PropTypes.object\n  };\n  return ApolloProvider;\n}(react_1.Component);\n\nexports.default = ApolloProvider;","map":null,"metadata":{},"sourceType":"script"}