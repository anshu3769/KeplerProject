{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Register.js\";\nimport React from 'react';\n\nvar RegisterPlayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterPlayer, _React$Component);\n\n  function RegisterPlayer() {\n    var _this;\n\n    _classCallCheck(this, RegisterPlayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterPlayer).call(this));\n\n    _this.handleKeyPress = function (e, field) {\n      // If enter key is pressed, focus next input field.\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        var next = _this.refs[field.name].nextSibling;\n\n        if (next && next.tagName === \"INPUT\") {\n          _this.refs[field.name].nextSibling.focus();\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _loop = function _loop(x) {\n        _this2.refs[x].onkeypress = function (e) {\n          return _this2.handleKeyPress(e, _this2.refs[x]);\n        };\n      };\n\n      for (var x in this.refs) {\n        _loop(x);\n      }\n\n      this.refs.name.focus();\n    }\n  }, {\n    key: \"_handleButtonClick\",\n    value: function _handleButtonClick(e) {\n      e.preventDefault();\n      console.log('buttonClicked!');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Focus next input on Enter\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ref: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ref: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"zip_code\",\n        ref: \"zip_code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this._handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return RegisterPlayer;\n}(React.Component); //class RegisterPlayer extends React.Component {\n//  constructor() {\n//    super();\n//  }\n//  // Loop through the ref's object, and bind each of them to onkeypress\n//  componentDidMount() {\n//    console.log(\"this.refs \",this.refs)\n//    for (let x in this.refs) {\n//      this.refs[x].onkeypress = e => this.handleKeyPress(e, this.refs[x]);\n//    }\n//    this.refs.name.focus();\n//  }\n//  // This checks ENTER key (13), then checks if next node is an INPUT\n//  // Then focuses next input box\n//  handleKeyPress = (e, field) => {\n//    if (e.keyCode === 13) {\n//      console.log(\"keycode is 13\")\n//      e.preventDefault(); // Prevent form submission if button present\n//      console.log(\"handle keypress this.refs \",this.refs)\n//      console.log(\"handle keypress field.name \",field.name)\n//      let next = this.refs[field.name].nextSibling;\n//      console.log(\"next is \", next)\n//      console.log(\"tagname is \", next.tagName)\n//      if (next && next.tagName === 'INPUT') {\n//        console.log(\"keytag is input\")\n//        this.refs[field.name].nextSibling.focus();\n//      }\n//    }\n//  };\n//  render() {\n//    return (\n//      <div>\n//        <form onSubmit={this.handleSubmit}>\n//        <div>\n//            <label>\n//              First Name:\n//              <input\n//                type=\"text\"\n//                name=\"firstname\"\n//                ref=\"firstname\"\n//                //onChange={this.props.handleFirstName}\n//              />\n//            </label>\n//      </div>\n//      <div>\n//            <label>\n//              Last Name:\n//              <input\n//                type=\"text\"\n//                name=\"lastname\"\n//                ref=\"lastname\"\n//                //onChange={this.props.handleLastName}\n//              />\n//            </label>\n//    </div>\n//    <div>\n//            <label>\n//              User Name:\n//              <input\n//                type=\"text\"\n//                name=\"username\"\n//                //onChange={this.handleUserNameChange}\n//                ref=\"username\"\n//              />\n//            </label>\n//      </div>\n//          <button type=\"submit\">Register Player</button>\n//        </form>\n//      </div>\n//    );\n//  }\n//}\n\n\nexport default RegisterPlayer;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Register.js"],"names":["React","RegisterPlayer","handleKeyPress","e","field","keyCode","preventDefault","next","refs","name","nextSibling","tagName","focus","x","onkeypress","console","log","_handleButtonClick","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,c;;;;;AACJ,4BAAc;AAAA;;AAAA;;AACZ;;AADY,UAYdC,cAZc,GAYG,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC7B;AACA,UAAID,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AACpBF,QAAAA,CAAC,CAACG,cAAF;AACA,YAAIC,IAAI,GAAG,MAAKC,IAAL,CAAUJ,KAAK,CAACK,IAAhB,EAAsBC,WAAjC;;AACA,YAAIH,IAAI,IAAIA,IAAI,CAACI,OAAL,KAAiB,OAA7B,EAAsC;AACpC,gBAAKH,IAAL,CAAUJ,KAAK,CAACK,IAAhB,EAAsBC,WAAtB,CAAkCE,KAAlC;AACD;AACF;AACF,KArBa;;AAAA;AAEb;;;;wCAEmB;AAAA;;AAAA,iCACTC,CADS;AAEhB,QAAA,MAAI,CAACL,IAAL,CAAUK,CAAV,EAAaC,UAAb,GAA0B,UAACX,CAAD;AAAA,iBACxB,MAAI,CAACD,cAAL,CAAoBC,CAApB,EAAuB,MAAI,CAACK,IAAL,CAAUK,CAAV,CAAvB,CADwB;AAAA,SAA1B;AAFgB;;AAClB,WAAK,IAAIA,CAAT,IAAc,KAAKL,IAAnB,EAAyB;AAAA,cAAhBK,CAAgB;AAGxB;;AACD,WAAKL,IAAL,CAAUC,IAAV,CAAeG,KAAf;AACD;;;uCAakBT,C,EAAG;AACpBA,MAAAA,CAAC,CAACG,cAAF;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,GAAG,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAFF,CADF;AAWD;;;;EAzC0BjB,KAAK,CAACkB,S,GA4CnC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAejB,cAAf","sourcesContent":["import React from 'react';\n\nclass RegisterPlayer extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    for (let x in this.refs) {\n      this.refs[x].onkeypress = (e) =>\n        this.handleKeyPress(e, this.refs[x]);\n    }\n    this.refs.name.focus();\n  }\n\n  handleKeyPress = (e, field) => {\n    // If enter key is pressed, focus next input field.\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      let next = this.refs[field.name].nextSibling;\n      if (next && next.tagName === \"INPUT\") {\n        this.refs[field.name].nextSibling.focus();\n      }\n    }\n  }\n\n  _handleButtonClick(e) {\n    e.preventDefault();\n    console.log('buttonClicked!');\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Focus next input on Enter</h1>\n        <form>\n          <input type=\"text\" name=\"name\" ref='name' />\n          <input type=\"text\" name=\"name\" ref='email' />\n          <input type=\"text\" name=\"zip_code\" ref='zip_code' />\n          <button onClick={this._handleButtonClick}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n//class RegisterPlayer extends React.Component {\n//  constructor() {\n//    super();\n//  }\n\n//  // Loop through the ref's object, and bind each of them to onkeypress\n//  componentDidMount() {\n//    console.log(\"this.refs \",this.refs)\n//    for (let x in this.refs) {\n//      this.refs[x].onkeypress = e => this.handleKeyPress(e, this.refs[x]);\n//    }\n//    this.refs.name.focus();\n//  }\n\n//  // This checks ENTER key (13), then checks if next node is an INPUT\n//  // Then focuses next input box\n//  handleKeyPress = (e, field) => {\n//    if (e.keyCode === 13) {\n\n//      console.log(\"keycode is 13\")\n//      e.preventDefault(); // Prevent form submission if button present\n\n//      console.log(\"handle keypress this.refs \",this.refs)\n//      console.log(\"handle keypress field.name \",field.name)\n\n//      let next = this.refs[field.name].nextSibling;\n\n//      console.log(\"next is \", next)\n//      console.log(\"tagname is \", next.tagName)\n//      if (next && next.tagName === 'INPUT') {\n//        console.log(\"keytag is input\")\n//        this.refs[field.name].nextSibling.focus();\n//      }\n//    }\n//  };\n\n//  render() {\n//    return (\n//      <div>\n//        <form onSubmit={this.handleSubmit}>\n//        <div>\n//            <label>\n//              First Name:\n//              <input\n//                type=\"text\"\n//                name=\"firstname\"\n//                ref=\"firstname\"\n//                //onChange={this.props.handleFirstName}\n//              />\n//            </label>\n//      </div>\n\n//      <div>\n//            <label>\n//              Last Name:\n//              <input\n//                type=\"text\"\n//                name=\"lastname\"\n//                ref=\"lastname\"\n//                //onChange={this.props.handleLastName}\n//              />\n//            </label>\n//    </div>\n//    <div>\n//            <label>\n//              User Name:\n//              <input\n//                type=\"text\"\n//                name=\"username\"\n//                //onChange={this.handleUserNameChange}\n//                ref=\"username\"\n//              />\n//            </label>\n//      </div>\n\n//          <button type=\"submit\">Register Player</button>\n//        </form>\n//      </div>\n//    );\n//  }\n//}\n\nexport default RegisterPlayer;\n"]},"metadata":{},"sourceType":"module"}