{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/App.js\";\nimport React from 'react';\nimport '../styles/App.css';\nimport StartButton from './StartButton';\nimport Timer from './Timer';\nimport CreatePlayer from './Player';\nimport WordList from './WordList';\nimport UserList from './UserList';\nimport UpdateScore from './Score'; //The page has four views\n//1. \"Register\" view where the user registers/login\n//2. \"Loading\" view where the words get loaded after the user logs in\n//3. \"Game\" view where the player plays the game.\n//4. \"Score\" view where the score for the current game are displayed\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  //Constructor...Starts\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (event) {\n      //this.state.value = event.target.value\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleFirstNameChange = function (event) {\n      console.log('firstnamechange'); //this.state.firstName = event.target.value;\n\n      _this.setState({\n        firstName: event.target.value\n      });\n\n      console.log('event.target.value ', event.target.value);\n      console.log('First name ', _this.state.firstName);\n    };\n\n    _this.handleLastNameChange = function (event) {\n      console.log('lastnamechange'); //this.state.lastName = event.target.value;\n\n      _this.setState({\n        lastName: event.target.value\n      });\n\n      console.log('Last name ', _this.state.lastName);\n    };\n\n    _this.handleUserNameChange = function (event) {\n      //To prevent default rendering behavior\n      event.preventDefault();\n      console.log('handle user name change');\n      console.log('event target user name', _this.state.value);\n      if (event.target.value) _this.state.userName = event.target.value; //coming from registration\n      else _this.state.userName = _this.state.value; //coming from returning user\n\n      console.log(' User name ', _this.state.userName);\n\n      if (_this.state.userName === '') {\n        //handles the  case when user  registers with a blank user name\n        //this.error = 'Username should not be blank';\n        _this.setState({\n          view: 'Register',\n          firstName: '',\n          lastName: '',\n          users: [],\n          error: 'Username should not be blank!!'\n        });\n\n        console.log(' Error ', _this.state.error);\n        console.log(' User name ', _this.state.userName); //this.setState({userName: event.target.value});\n\n        console.log('user name ', _this.state.userName);\n      } else {\n        //Check on event.target.value is to avoid going in this\n        //if condition if the user is first time user. Registration time\n        // event.target.value will have something onChange\n        if (!event.target.value) {\n          //if the returning user is not present in the database.\n          if (_this.isUniqueUser()) {\n            console.log('user not registered'); //this.state.error = 'Not a registered user!!';\n\n            _this.setState({\n              view: 'Register',\n              error: 'Not a registered user!!',\n              value: ''\n            });\n          } else {\n            //this.error = '';\n            _this.setState({\n              view: 'Loading',\n              value: '',\n              error: ''\n            });\n          }\n        }\n      }\n    };\n\n    _this.handleWordSubmit = function (event) {\n      //call the create player mutation with the given input\n      console.log('this state value = ', _this.state.value); //choose a word randomly from the input word list\n\n      var randomIndex = Math.floor(Math.random() * Math.floor(100));\n\n      if (_this.timerStarted) {\n        if (_this.index < _this.inputWords.length - 1) {\n          _this.index++;\n          console.log('Handle submit if::index = ', _this.index);\n\n          _this.outputWords.push(_this.state.value);\n\n          _this.setState({\n            text: _this.inputWords[randomIndex].word,\n            value: '',\n            error: ''\n          });\n\n          _this.indicesUsedInThisGame.push(randomIndex);\n        } else {\n          _this.calculateScores();\n\n          _this.setState({\n            view: 'Score',\n            value: '',\n            error: ''\n          });\n        } // to clear the input box every time. This gives warning though\n        //this.state.value = '';\n        //this.state.error = '';\n\n      } else {\n        console.log('timer not started'); // this.state.error = 'Please start the timer to play';\n\n        _this.setState({\n          view: 'Game',\n          error: 'Please start the timer to play!!'\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    _this.isUniqueUser = function () {\n      var i;\n      console.log('isUniqueUser');\n      console.log('user = ', _this.state.userName);\n\n      for (i = 0; i < _this.state.users.length; i++) {\n        console.log('for loop ', _this.state.users[i]);\n\n        if (_this.state.users[i].userName === _this.state.userName) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _this.handleRegister = function () {\n      console.log('handleRegister');\n      console.log('firstName ', _this.state.firstName);\n      console.log('lastName ', _this.state.lastName);\n      console.log('userName ', _this.state.userName);\n\n      if (_this.state.userName === '') {\n        //this.error = 'Username should not be blank!!!!';\n        _this.setState({\n          view: 'Register',\n          firstName: '',\n          lastName: '',\n          users: [],\n          error: 'Username should not be blank!!!!'\n        });\n      } else if (_this.isUniqueUser()) {\n        console.log('new user'); //this.error = '';\n\n        _this.setState({\n          view: 'Loading',\n          error: ''\n        });\n      } else {\n        //this.error = 'Username already taken!!!!';\n        _this.setState({\n          view: 'Register',\n          error: 'Username already taken!!!!'\n        });\n      }\n    };\n\n    _this.handleWordList = function (words) {\n      _this.inputWords = words;\n\n      _this.setState({\n        view: 'Game'\n      });\n    };\n\n    _this.handleUserList = function (users) {\n      console.log('handle user list'); //Trying to uncomment this run the loop forever  in the Query component\n      // this.setState({\n      //   users:users,\n      // })\n\n      _this.state.users = users;\n      console.log(_this.state.users.length);\n    };\n\n    _this.ticks = function () {\n      var min = Math.floor(_this.secondsRemaining / 60);\n      var sec = _this.secondsRemaining;\n\n      _this.setState({\n        minutes: min,\n        seconds: sec\n      });\n\n      if (min < 10) {\n        _this.setState({\n          minutes: '0' + min\n        });\n      }\n\n      if (sec < 10) {\n        _this.setState({\n          seconds: '0' + sec\n        });\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(_this.intervalHandle);\n\n        _this.calculateScores();\n\n        _this.setState({\n          view: 'Score',\n          value: '',\n          error: ''\n        }); //this.setState({view: 'Score'});\n\n      }\n\n      _this.secondsRemaining--;\n    };\n\n    _this.startCountDown = function () {\n      console.log('inside countdown');\n      _this.intervalHandle = setInterval(_this.ticks, 1000);\n      _this.secondsRemaining = 30;\n      _this.timerStarted = true;\n    };\n\n    _this.state = {\n      minutes: '1',\n      seconds: '00',\n      text: 'Welcome',\n      view: 'Register',\n      firstName: '',\n      lastName: '',\n      userName: '',\n      //  scores: 0,\n      users: [],\n      value: '',\n      error: ''\n    };\n    _this.secondsRemaining = 0;\n    _this.intervalHandle = 0;\n    _this.inputWords = [];\n    _this.index = -1;\n    _this.outputWords = [];\n    _this.indicesUsedInThisGame = [];\n    _this.scores = 0;\n    _this.timerStared = false; //this.error = '';\n\n    return _this;\n  } //Constructor...Ends\n  //calculateScore....Starts\n\n\n  _createClass(App, [{\n    key: \"calculateScores\",\n    value: function calculateScores() {\n      console.log('Inside calculate scores');\n      console.log('this.indicesUsedInThisGame.length ', this.indicesUsedInThisGame.length);\n      var index = 1;\n      var i;\n\n      for (i = 0; i < this.indicesUsedInThisGame.length; i++) {\n        console.log('outputWords ', this.outputWords[index]);\n        console.log('inputWords ', this.inputWords[this.indicesUsedInThisGame[i]].word);\n        if (this.outputWords[index] === this.inputWords[this.indicesUsedInThisGame[i]].word) this.scores += 10;\n        index++;\n      } //clear the indices list for next game\n\n\n      this.indicesUsedInThisGame = []; //     while (index < this.outputWords.length) {\n      //       console.log('outputWords ', this.outputWords[index]);\n      //       console.log('inputWords ', this.inputWords[index - 1].word);\n      //       if (this.outputWords[index] === this.inputWords[index-1].word)\n      //         this.scores+=10;\n      //       index++;\n      //     }\n    } //calculateScore....Ends\n    //handleChange...Starts\n\n  }, {\n    key: \"render\",\n    //startCountDown...Ends\n    //render...Starts\n    value: function render() {\n      console.log('RENDER with state and error msg', this.state.view + this.state.error);\n\n      if (this.state.view === 'Register') {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"!!!TYPING GAME!!!\"), React.createElement(UserList, {\n          onLoadComplete: this.handleUserList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, this.state.error), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, \" New User \"), React.createElement(CreatePlayer, {\n          handleRegister: this.handleRegister,\n          handleFirstName: this.handleFirstNameChange,\n          handleLastName: this.handleLastNameChange,\n          handleUserName: this.handleUserNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, \" Returning User\"), React.createElement(\"form\", {\n          onSubmit: this.handleUserNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"User Name\", React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }))));\n      }\n\n      if (this.state.view === 'Loading') {\n        return React.createElement(WordList, {\n          onLoadComplete: this.handleWordList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        });\n      } // if (this.state.view === 'Timer') {\n      //   return (\n      //     <div className=\"App\">\n      //       <div float=\"left\">\n      //         <h2>!!!TYPING GAME!!!</h2>\n      //         <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n      //         <StartButton startCountDown={this.startCountDown} />\n      //       </div>\n      //     </div>\n      //   );\n      // }\n\n\n      if (this.state.view === 'Game') {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          float: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, \" Hello \", this.state.userName), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, \"!!!TYPING GAME!!!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }), React.createElement(Timer, {\n          minutes: this.state.minutes,\n          seconds: this.state.seconds,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }), React.createElement(StartButton, {\n          startCountDown: this.startCountDown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, this.state.text), React.createElement(\"form\", {\n          onSubmit: this.handleWordSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          value: \"Submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, this.state.error))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.view === 'Score') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, \"You scored:: \", this.scores), React.createElement(UpdateScore, {\n          userName: this.state.userName,\n          score: this.scores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }));\n      }\n    } //render...Ends\n\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/App.js"],"names":["React","StartButton","Timer","CreatePlayer","WordList","UserList","UpdateScore","App","props","handleChange","event","setState","value","target","handleFirstNameChange","console","log","firstName","state","handleLastNameChange","lastName","handleUserNameChange","preventDefault","userName","view","users","error","isUniqueUser","handleWordSubmit","randomIndex","Math","floor","random","timerStarted","index","inputWords","length","outputWords","push","text","word","indicesUsedInThisGame","calculateScores","i","handleRegister","handleWordList","words","handleUserList","ticks","min","secondsRemaining","sec","minutes","seconds","clearInterval","intervalHandle","startCountDown","setInterval","scores","timerStared","marginLeft","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/App.css';\nimport StartButton from './StartButton';\nimport Timer from './Timer';\nimport CreatePlayer from './Player';\nimport WordList from './WordList';\nimport UserList from './UserList';\nimport UpdateScore from './Score';\n\n//The page has four views\n//1. \"Register\" view where the user registers/login\n//2. \"Loading\" view where the words get loaded after the user logs in\n//3. \"Game\" view where the player plays the game.\n//4. \"Score\" view where the score for the current game are displayed\n\nclass App extends React.Component {\n  //Constructor...Starts\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: '1',\n      seconds: '00',\n      text: 'Welcome',\n      view: 'Register',\n      firstName: '',\n      lastName: '',\n      userName: '',\n      //  scores: 0,\n      users: [],\n      value: '',\n      error: '',\n    };\n\n    this.secondsRemaining = 0;\n    this.intervalHandle = 0;\n    this.inputWords = [];\n    this.index = -1;\n    this.outputWords = [];\n    this.indicesUsedInThisGame = []\n    this.scores = 0;\n    this.timerStared = false;\n    //this.error = '';\n  }\n  //Constructor...Ends\n\n  //calculateScore....Starts\n  calculateScores() {\n    console.log('Inside calculate scores');\n    console.log('this.indicesUsedInThisGame.length ', this.indicesUsedInThisGame.length);\n    let index = 1;\n    let i;\n    for( i = 0; i< this.indicesUsedInThisGame.length;i++)\n    {\n      console.log('outputWords ', this.outputWords[index]);\n      console.log('inputWords ', this.inputWords[this.indicesUsedInThisGame[i]].word);\n      if (this.outputWords[index] === this.inputWords[this.indicesUsedInThisGame[i]].word)\n        this.scores+=10;\n      index++;\n\n    }\n    //clear the indices list for next game\n    this.indicesUsedInThisGame = []\n\n\n//     while (index < this.outputWords.length) {\n//       console.log('outputWords ', this.outputWords[index]);\n//       console.log('inputWords ', this.inputWords[index - 1].word);\n//       if (this.outputWords[index] === this.inputWords[index-1].word)\n//         this.scores+=10;\n//       index++;\n//     }\n  }\n  //calculateScore....Ends\n\n  //handleChange...Starts\n  handleChange = event => {\n    //this.state.value = event.target.value\n    this.setState({value: event.target.value});\n  };\n  //handleChange...Ends\n\n  //handleFirstNameChange...Starts\n  handleFirstNameChange = event => {\n    console.log('firstnamechange');\n    //this.state.firstName = event.target.value;\n    this.setState({firstName: event.target.value});\n    console.log('event.target.value ', event.target.value);\n    console.log('First name ', this.state.firstName);\n  };\n  //handleFirstNameChange...Ends\n\n  //handleLastNameChange...Starts\n  handleLastNameChange = event => {\n    console.log('lastnamechange');\n    //this.state.lastName = event.target.value;\n    this.setState({lastName: event.target.value});\n    console.log('Last name ', this.state.lastName);\n  };\n  //handleLastNameChange...Ends\n\n  //handleUserNameChange...Starts\n  handleUserNameChange = event => {\n    //To prevent default rendering behavior\n    event.preventDefault();\n\n    console.log('handle user name change');\n    console.log('event target user name', this.state.value);\n    if (event.target.value) this.state.userName = event.target.value;\n    //coming from registration\n    else this.state.userName = this.state.value; //coming from returning user\n    console.log(' User name ', this.state.userName);\n    if (this.state.userName === '') {\n      //handles the  case when user  registers with a blank user name\n      //this.error = 'Username should not be blank';\n      this.setState({\n        view: 'Register',\n        firstName: '',\n        lastName: '',\n        users: [],\n        error: 'Username should not be blank!!',\n      });\n\n      console.log(' Error ', this.state.error);\n      console.log(' User name ', this.state.userName);\n\n      //this.setState({userName: event.target.value});\n      console.log('user name ', this.state.userName);\n    } else {\n      //Check on event.target.value is to avoid going in this\n      //if condition if the user is first time user. Registration time\n      // event.target.value will have something onChange\n      if (!event.target.value) {\n        //if the returning user is not present in the database.\n        if (this.isUniqueUser()) {\n          console.log('user not registered');\n          //this.state.error = 'Not a registered user!!';\n          this.setState({\n            view: 'Register',\n            error: 'Not a registered user!!',\n            value: '',\n          });\n        } else {\n          //this.error = '';\n          this.setState({\n            view: 'Loading',\n            value: '',\n            error: '',\n          });\n        }\n      }\n    }\n  };\n  //handleUserNameChange...Ends\n\n  //handleWordSubmit...Starts\n  handleWordSubmit = event => {\n    //call the create player mutation with the given input\n\n    console.log('this state value = ', this.state.value);\n    //choose a word randomly from the input word list\n    let randomIndex = Math.floor(Math.random() * Math.floor(100));\n    if (this.timerStarted) {\n      if (this.index < this.inputWords.length - 1) {\n        this.index++;\n        console.log('Handle submit if::index = ', this.index);\n        this.outputWords.push(this.state.value);\n        this.setState({\n          text: this.inputWords[randomIndex].word,\n          value: '',\n          error: '',\n        });\n        this.indicesUsedInThisGame.push(randomIndex)\n      } else {\n        this.calculateScores();\n        this.setState({\n          view: 'Score',\n          value: '',\n          error: '',\n        });\n      }\n\n      // to clear the input box every time. This gives warning though\n      //this.state.value = '';\n      //this.state.error = '';\n    } else {\n      console.log('timer not started');\n      // this.state.error = 'Please start the timer to play';\n      this.setState({\n        view: 'Game',\n        error: 'Please start the timer to play!!',\n      });\n    }\n\n    event.preventDefault();\n  };\n  //handleWordSubmit...Ends\n\n  //isUniqueUser...starts\n  isUniqueUser = () => {\n    let i;\n    console.log('isUniqueUser');\n    console.log('user = ', this.state.userName);\n    for (i = 0; i < this.state.users.length; i++) {\n      console.log('for loop ', this.state.users[i]);\n      if (this.state.users[i].userName === this.state.userName) {\n        return false;\n      }\n    }\n    return true;\n  };\n  //isUniqueUser...ends\n\n  //handleRegister...Starts\n  handleRegister = () => {\n    console.log('handleRegister');\n\n    console.log('firstName ', this.state.firstName);\n    console.log('lastName ', this.state.lastName);\n    console.log('userName ', this.state.userName);\n\n    if (this.state.userName === '') {\n      //this.error = 'Username should not be blank!!!!';\n      this.setState({\n        view: 'Register',\n        firstName: '',\n        lastName: '',\n        users: [],\n        error: 'Username should not be blank!!!!',\n      });\n    } else if (this.isUniqueUser()) {\n      console.log('new user');\n      //this.error = '';\n      this.setState({\n        view: 'Loading',\n        error: '',\n      });\n    } else {\n      //this.error = 'Username already taken!!!!';\n      this.setState({\n        view: 'Register',\n        error: 'Username already taken!!!!',\n      });\n    }\n  };\n  //handleRegister...Ends\n\n  //handleWordList...Starts\n  handleWordList = words => {\n    this.inputWords = words;\n    this.setState({view: 'Game'});\n  };\n  //handleWordList...Ends\n\n  //handleUserList...Starts\n  handleUserList = users => {\n    console.log('handle user list');\n\n    //Trying to uncomment this run the loop forever  in the Query component\n    // this.setState({\n    //   users:users,\n    // })\n    this.state.users = users;\n    console.log(this.state.users.length);\n  };\n  //handleUserList...Ends\n\n  //ticks...Starts\n  ticks = () => {\n    var min = Math.floor(this.secondsRemaining / 60);\n    var sec = this.secondsRemaining;\n\n    this.setState({\n      minutes: min,\n      seconds: sec,\n    });\n\n    if (min < 10) {\n      this.setState({minutes: '0' + min});\n    }\n\n    if (sec < 10) {\n      this.setState({seconds: '0' + sec});\n    }\n\n    if ((min === 0) & (sec === 0)) {\n      clearInterval(this.intervalHandle);\n\n      this.calculateScores();\n\n      this.setState({\n        view: 'Score',\n        value: '',\n        error: '',\n      });\n      //this.setState({view: 'Score'});\n    }\n\n    this.secondsRemaining--;\n  };\n  //ticks..Ends\n\n  //startContDown...Starts\n  startCountDown = () => {\n    console.log('inside countdown');\n    this.intervalHandle = setInterval(this.ticks, 1000);\n    this.secondsRemaining = 30;\n    this.timerStarted = true;\n  };\n  //startCountDown...Ends\n\n  //render...Starts\n  render() {\n    console.log(\n      'RENDER with state and error msg',\n      this.state.view + this.state.error,\n    );\n\n    if (this.state.view === 'Register') {\n      return (\n        <div className=\"App\">\n          <h2>!!!TYPING GAME!!!</h2>\n          <UserList onLoadComplete={this.handleUserList} />\n          <div>\n            <h3>{this.state.error}</h3>\n            <h3> New User </h3>\n            <CreatePlayer\n              handleRegister={this.handleRegister}\n              handleFirstName={this.handleFirstNameChange}\n              handleLastName={this.handleLastNameChange}\n              handleUserName={this.handleUserNameChange}\n            />\n            <h3> Returning User</h3>\n            <form onSubmit={this.handleUserNameChange}>\n              <label>\n                User Name\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <input type=\"submit\" value=\"Login\" />\n            </form>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.state.view === 'Loading') {\n      return <WordList onLoadComplete={this.handleWordList} />;\n    }\n    // if (this.state.view === 'Timer') {\n    //   return (\n    //     <div className=\"App\">\n    //       <div float=\"left\">\n    //         <h2>!!!TYPING GAME!!!</h2>\n    //         <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n    //         <StartButton startCountDown={this.startCountDown} />\n    //       </div>\n    //     </div>\n    //   );\n    // }\n    if (this.state.view === 'Game') {\n      return (\n        <div className=\"App\">\n          <div float=\"left\">\n            <h3> Hello {this.state.userName}</h3>\n            <h2>!!!TYPING GAME!!!</h2>\n            <p />\n            <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n            <StartButton startCountDown={this.startCountDown} />\n          </div>\n          <div>{this.state.text}</div>\n          <form onSubmit={this.handleWordSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <input style={{marginLeft: 10}} type=\"submit\" value=\"Submit\" />\n            <div>\n              <h3>{this.state.error}</h3>\n            </div>\n          </form>\n\n          <div />\n        </div>\n      );\n    }\n    if (this.state.view === 'Score') {\n      return (\n        <div>\n          <h1>You scored:: {this.scores}</h1>\n          <UpdateScore userName={this.state.userName} score={this.scores} />\n        </div>\n      );\n    }\n  }\n  //render...Ends\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}