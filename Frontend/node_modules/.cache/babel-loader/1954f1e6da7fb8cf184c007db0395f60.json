{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Player.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreatePlayer(\\n    $firstName: String!\\n    $lastName: String!\\n    $userName: String!\\n  ) {\\n    createPlayer(\\n      firstName: $firstName\\n      lastName: $lastName\\n      userName: $userName\\n    ) {\\n      player {\\n        firstName\\n        lastName\\n        userName\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar CREATE_PLAYER = gql(_templateObject()); // class CreatePlayer extends React.Component {\n//   render() {\n//     let fName = this.props.firstName;\n//     let lName = this.props.lastName;\n//     let uName = this.props.userName;\n//     console.log('CreatePlayer:: ', fName);\n//     console.log('CreatePlayer:: ', lName);\n//     console.log('CreatePlayer:: ', uName);\n//     return (\n//       <Mutation\n//         mutation={CREATE_PLAYER}\n//         errorPolicy=\"all\"\n//         onCompleted= {this.props.handleRegister}\n//         // variables={{\n//         //   firstName:\"test5\",\n//         //   lastName:\"test5\",\n//         //   userName:\"test5\"\n//         // }}\n//       >\n//         {(createPlayer, {loading, data, error}) => (\n//           <div>\n//             <form\n//               onSubmit={e => {\n//                 e.preventDefault();\n//                 createPlayer({\n//                   variables: {\n//                     firstName: fName,\n//                     lastName: lName,\n//                     userName: uName,\n//                   },\n//                 });\n//               }}>\n//               <button type=\"submit\">Add Player</button>\n//             </form>\n//           </div>\n//         )}\n//       </Mutation>\n//     );\n//   }\n// }\n\nvar CreatePlayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePlayer, _React$Component);\n\n  function CreatePlayer() {\n    _classCallCheck(this, CreatePlayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreatePlayer).apply(this, arguments));\n  }\n\n  _createClass(CreatePlayer, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   for (let x in this.refs) {\n    //     this.refs[x].onkeypress = e => this.handleKeyPress(e, this.refs[x]);\n    //   }\n    //   this.refs.name.focus();\n    // }\n    // handleKeyPress = (e, field) => {\n    //   // If enter key is pressed, focus next input field.\n    //   if (e.keyCode === 13) {\n    //     e.preventDefault();\n    //     let next = this.refs[field.name].nextSibling;\n    //     if (next && next.tagName === 'INPUT') {\n    //       this.refs[field.name].nextSibling.focus();\n    //     }\n    //   }\n    // };\n    value: function render() {\n      var _this = this;\n\n      var firstName;\n      var lastName;\n      var userName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Mutation, {\n        mutation: CREATE_PLAYER,\n        errorPolicy: \"all\",\n        onCompleted: this.props.handleRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, function (createPlayer, _ref) {\n        var loading = _ref.loading,\n            data = _ref.data,\n            error = _ref.error;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n            createPlayer({\n              variables: {\n                firstName: firstName.value,\n                lastName: lastName.value,\n                userName: userName.value\n              }\n            });\n            firstName.value = '';\n            lastName.value = '';\n            userName.value = '';\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"First Name\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          onChange: _this.handleFirstName,\n          ref: function ref(node) {\n            firstName = node;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Last Name\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          onChange: _this.handleLastName,\n          ref: function ref(node) {\n            lastName = node;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"User Name\", React.createElement(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: _this.handleUserName,\n          ref: function ref(node) {\n            userName = node;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }))), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Register Player\")));\n      }));\n    }\n  }]);\n\n  return CreatePlayer;\n}(React.Component);\n\nexport default CreatePlayer;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Player.js"],"names":["React","Mutation","gql","CREATE_PLAYER","CreatePlayer","firstName","lastName","userName","props","handleRegister","createPlayer","loading","data","error","e","preventDefault","variables","value","handleFirstName","node","handleLastName","handleUserName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst CREATE_PLAYER = gql`\n  mutation CreatePlayer(\n    $firstName: String!\n    $lastName: String!\n    $userName: String!\n  ) {\n    createPlayer(\n      firstName: $firstName\n      lastName: $lastName\n      userName: $userName\n    ) {\n      player {\n        firstName\n        lastName\n        userName\n      }\n    }\n  }\n`;\n\n// class CreatePlayer extends React.Component {\n//   render() {\n//     let fName = this.props.firstName;\n//     let lName = this.props.lastName;\n//     let uName = this.props.userName;\n\n//     console.log('CreatePlayer:: ', fName);\n//     console.log('CreatePlayer:: ', lName);\n//     console.log('CreatePlayer:: ', uName);\n//     return (\n//       <Mutation\n//         mutation={CREATE_PLAYER}\n//         errorPolicy=\"all\"\n//         onCompleted= {this.props.handleRegister}\n//         // variables={{\n//         //   firstName:\"test5\",\n//         //   lastName:\"test5\",\n//         //   userName:\"test5\"\n//         // }}\n//       >\n//         {(createPlayer, {loading, data, error}) => (\n//           <div>\n//             <form\n//               onSubmit={e => {\n//                 e.preventDefault();\n//                 createPlayer({\n//                   variables: {\n//                     firstName: fName,\n//                     lastName: lName,\n//                     userName: uName,\n//                   },\n//                 });\n//               }}>\n//               <button type=\"submit\">Add Player</button>\n//             </form>\n//           </div>\n//         )}\n//       </Mutation>\n//     );\n//   }\n// }\n\nclass CreatePlayer extends React.Component {\n  // componentDidMount() {\n  //   for (let x in this.refs) {\n  //     this.refs[x].onkeypress = e => this.handleKeyPress(e, this.refs[x]);\n  //   }\n  //   this.refs.name.focus();\n  // }\n\n  // handleKeyPress = (e, field) => {\n  //   // If enter key is pressed, focus next input field.\n  //   if (e.keyCode === 13) {\n  //     e.preventDefault();\n  //     let next = this.refs[field.name].nextSibling;\n  //     if (next && next.tagName === 'INPUT') {\n  //       this.refs[field.name].nextSibling.focus();\n  //     }\n  //   }\n  // };\n\n  render() {\n    let firstName;\n    let lastName;\n    let userName;\n\n    return (\n      <div>\n        <Mutation\n          mutation={CREATE_PLAYER}\n          errorPolicy=\"all\"\n          onCompleted={this.props.handleRegister}>\n          {(createPlayer, {loading, data, error}) => (\n            <div>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  createPlayer({\n                    variables: {\n                      firstName: firstName.value,\n                      lastName: lastName.value,\n                      userName: userName.value,\n                    },\n                  });\n                  firstName.value = '';\n                  lastName.value = '';\n                  userName.value = '';\n                }}>\n                <div>\n                  <label>\n                    First Name\n                    <input\n                      type=\"text\"\n                      name=\"firstName\"\n                      onChange={this.handleFirstName}\n                      ref={node => {\n                        firstName = node;\n                      }}\n                    />\n                  </label>\n                </div>\n\n                <div>\n                  <label>\n                    Last Name\n                    <input\n                      type=\"text\"\n                      name=\"lastname\"\n                      onChange={this.handleLastName}\n                      ref={node => {\n                        lastName = node;\n                      }}\n                    />\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    User Name\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      onChange={this.handleUserName}\n                      ref={node => {\n                        userName = node;\n                      }}\n                    />\n                  </label>\n                </div>\n                <button type=\"submit\">Register Player</button>\n              </form>\n            </div>\n          )}\n        </Mutation>\n      </div>\n    );\n  }\n}\n\nexport default CreatePlayer;\n"]},"metadata":{},"sourceType":"module"}