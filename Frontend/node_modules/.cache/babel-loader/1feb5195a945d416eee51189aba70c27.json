{"ast":null,"code":"import _classCallCheck from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Register.js\";\nimport React from 'react';\n\nvar RegisterPlayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterPlayer, _React$Component);\n\n  function RegisterPlayer() {\n    var _this;\n\n    _classCallCheck(this, RegisterPlayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterPlayer).call(this));\n\n    _this.handleKeyPress = function (e, field) {\n      if (e.keyCode === 13) {\n        console.log(\"keycode is 13\");\n        e.preventDefault(); // Prevent form submission if button present\n\n        console.log(\"handle keypress this.refs \", _this.refs);\n        var next = _this.refs[field.name].nextSibling;\n        console.log(\"next is \", next);\n        console.log(\"tagname is \", next.tagName);\n\n        if (next && next.tagName === 'INPUT') {\n          console.log(\"keytag is input\");\n\n          _this.refs[field.name].nextSibling.focus();\n        }\n      }\n    };\n\n    return _this;\n  } // Loop through the ref's object, and bind each of them to onkeypress\n\n\n  _createClass(RegisterPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"this.refs \", this.refs);\n\n      var _loop = function _loop(x) {\n        _this2.refs[x].onkeypress = function (e) {\n          return _this2.handleKeyPress(e, _this2.refs[x]);\n        };\n      };\n\n      for (var x in this.refs) {\n        _loop(x);\n      }\n\n      this.refs.firstname.focus();\n    } // This checks ENTER key (13), then checks if next node is an INPUT\n    // Then focuses next input box\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstname\",\n        ref: \"firstname\" //onChange={this.props.handleFirstName}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Last Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastname\",\n        ref: \"lastname\" //onChange={this.props.handleLastName}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"User Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\" //onChange={this.handleUserNameChange}\n        ,\n        ref: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Register Player\")));\n    }\n  }]);\n\n  return RegisterPlayer;\n}(React.Component);\n\nexport default RegisterPlayer;","map":{"version":3,"sources":["/home/anshu/sandbox/KeplerProject/Frontend/typefast/src/components/Register.js"],"names":["React","RegisterPlayer","handleKeyPress","e","field","keyCode","console","log","preventDefault","refs","next","name","nextSibling","tagName","focus","x","onkeypress","firstname","handleSubmit","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,c;;;;;AACJ,4BAAc;AAAA;;AAAA;;AACZ;;AADY,UAedC,cAfc,GAeG,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC7B,UAAID,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAEpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAJ,QAAAA,CAAC,CAACK,cAAF,GAHoB,CAGA;;AAEpBF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyC,MAAKE,IAA9C;AAEA,YAAIC,IAAI,GAAG,MAAKD,IAAL,CAAUL,KAAK,CAACO,IAAhB,EAAsBC,WAAjC;AAGAN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,IAAxB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,IAAI,CAACG,OAAhC;;AACA,YAAIH,IAAI,IAAIA,IAAI,CAACG,OAAL,KAAiB,OAA7B,EAAsC;AACpCP,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,gBAAKE,IAAL,CAAUL,KAAK,CAACO,IAAhB,EAAsBC,WAAtB,CAAkCE,KAAlC;AACD;AACF;AACF,KAjCa;;AAAA;AAEb,G,CAED;;;;;wCACoB;AAAA;;AAClBR,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKE,IAA9B;;AADkB,iCAETM,CAFS;AAGhB,QAAA,MAAI,CAACN,IAAL,CAAUM,CAAV,EAAaC,UAAb,GAA0B,UAAAb,CAAC;AAAA,iBAAI,MAAI,CAACD,cAAL,CAAoBC,CAApB,EAAuB,MAAI,CAACM,IAAL,CAAUM,CAAV,CAAvB,CAAJ;AAAA,SAA3B;AAHgB;;AAElB,WAAK,IAAIA,CAAT,IAAc,KAAKN,IAAnB,EAAyB;AAAA,cAAhBM,CAAgB;AAExB;;AACD,WAAKN,IAAL,CAAUQ,SAAV,CAAoBH,KAApB;AACD,K,CAED;AACA;;;;6BAqBS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,GAAG,EAAC,WAHN,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,GAAG,EAAC,UAHN,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP,CAGE;AAHF;AAIE,QAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CArBJ,EA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA/BF,CADF,CADF;AAqCD;;;;EA1E0BlB,KAAK,CAACmB,S;;AA6EnC,eAAelB,cAAf","sourcesContent":["import React from 'react';\n\nclass RegisterPlayer extends React.Component {\n  constructor() {\n    super();\n  }\n\n  // Loop through the ref's object, and bind each of them to onkeypress\n  componentDidMount() {\n    console.log(\"this.refs \",this.refs)\n    for (let x in this.refs) {\n      this.refs[x].onkeypress = e => this.handleKeyPress(e, this.refs[x]);\n    }\n    this.refs.firstname.focus();\n  }\n\n  // This checks ENTER key (13), then checks if next node is an INPUT\n  // Then focuses next input box\n  handleKeyPress = (e, field) => {\n    if (e.keyCode === 13) {\n\n      console.log(\"keycode is 13\")\n      e.preventDefault(); // Prevent form submission if button present\n\n      console.log(\"handle keypress this.refs \",this.refs)\n\n      let next = this.refs[field.name].nextSibling;\n\n\n      console.log(\"next is \", next)\n      console.log(\"tagname is \", next.tagName)\n      if (next && next.tagName === 'INPUT') {\n        console.log(\"keytag is input\")\n        this.refs[field.name].nextSibling.focus();\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n            <label>\n              First Name:\n              <input\n                type=\"text\"\n                name=\"firstname\"\n                ref=\"firstname\"\n                //onChange={this.props.handleFirstName}\n              />\n            </label>\n\n            <label>\n              Last Name:\n              <input\n                type=\"text\"\n                name=\"lastname\"\n                ref=\"lastname\"\n                //onChange={this.props.handleLastName}\n              />\n            </label>\n\n            <label>\n              User Name:\n              <input\n                type=\"text\"\n                name=\"username\"\n                //onChange={this.handleUserNameChange}\n                ref=\"username\"\n              />\n            </label>\n\n          <button type=\"submit\">Register Player</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPlayer;\n"]},"metadata":{},"sourceType":"module"}