
The command that works with docker container is

docker container run --net host  kepler-onboarding-project-backend


mutation UpdateScores($userName: String!, $userScore: Int!) {
  updateScores(userName: $userName, userScore: $userScore) {
    score {
      userName
      value
    }
  }
}

mutation M {
  updateScores(userName: "anshu-1", userScore: 65) {
    score {
      userName
      value
    }
  }
}

mutation M1 {
  createPlayer(firstName: "newf", userName: "", lastName: "newl") {
    player {
      userName
    }
  }
}

query Q {
  players(firstName: "Anshu") {
    firstName
    lastName
    userName
  }
}

query W {
  words {
    word
  }
}

query S2 {
  allScores(sort: value_desc) {
    edges {
      node {
        player {
          userName
        }
      }
    }
  }
}

query Q1 {
  allScores {
    edges {
      node {
        value
        userName
      }
    }
  }
}

mutation M3 {
  updateTopScores(userName: "pk", userScore: 70) {
    score {
      userName
      value
    }
  }
}

query T {
  topScores {
    userName
    value
  }
}












##################################################


mutation{
 createPlayer(firstName:"test3",lastName:"test3",userName:"test3"){
  player{
    userName
  }

}
}


<button type="submit" onClick={this.props.handleRegister}>


 mutation UpdateScores($userName: String!, $userScore: Int!) {
    updateScores(userName: $userName, userScore: $userScore) {
      score {
        userName
        value
      }
    }
  }


mutation M{
  updateScores(
    userName:"anshu-1"
  	userScore:7){
    score{
      userName
      value
    }
  }
}

mutation M1{
  createPlayer(firstName:"newf"
    userName:""
  lastName:"newl"){
    player{
      userName
    }

  }

}
query Q{
  players{
    userName
    }
  }

query W{
  allSmallWords{
    edges{
      node{
        word
      }
    }
  }
}


query Q1{
  allScores{
    edges{
      node{
        value
        userName
      }
    }
  }
}




############################
query Q{
  players{
    firstName
    userName
  }
}

mutation M1{
  createPlayer(
    firstName:"Kep"
    lastName:"Group"
    userName:"kep"){
  	player{
      firstName
      lastName
      userName
    }
  }
}

mutation M2{
  updateScores(userName:"anshu-2" userScore:0){
    score{
      userName
      value
    }
  }
}

query Q1{
  topScores{
    userName
    value
  }
}

query Q3{
topScores{
    userName
    value
  }
}

query Q2{
  allScores{
    edges{
      node{
        userName
        value
      }
    }
  }
}

mutation M3{
  updateTopScores(userName:"anshu-1" userScore:50){
  score{
    userName
    value
  }
  }
}

mutation W{
  createWord(word:"test"){
    word{
      word
    }
  }
}

query Words{
  allWords(first:10){
    pageInfo{
      hasNextPage
    }
    edges{
      cursor
      node{
        word
      }
    }
  }
}
